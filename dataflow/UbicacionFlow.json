{
	"name": "UbicacionFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "evaluacionesagropecuariascsvds",
						"type": "DatasetReference"
					},
					"name": "UbicacionFlow"
				},
				{
					"dataset": {
						"referenceName": "ubicacionds",
						"type": "DatasetReference"
					},
					"name": "UbicacionDs"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ubicacionds",
						"type": "DatasetReference"
					},
					"name": "SaveUbicacionRecords"
				}
			],
			"transformations": [
				{
					"name": "RemoveDuplicatedRecords"
				},
				{
					"name": "SelectUbicacionColums"
				},
				{
					"name": "RemoveSemicolumnCharacter"
				},
				{
					"name": "PreventDuplicateInserts"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {COD.DEP.} as string,",
				"          DEPARTAMENTO as string,",
				"          {C0D.MUN.} as string,",
				"          MUNICIPIO as string,",
				"          {GRUPO DE CULTIVO} as string,",
				"          {SUBGRUPO DE CULTIVO} as string,",
				"          CULTIVO as string,",
				"          {DESAGREGACION REGIONAL Y/O SISTEMA PRODUCTIVO} as string,",
				"          ANO as integer,",
				"          PERIODO as string,",
				"          {Area Sembrada(ha)} as integer,",
				"          {Area Cosechada(ha)} as integer,",
				"          {Produccion(t)} as string,",
				"          {Rendimiento(t/ha)} as integer,",
				"          {ESTADO FISICO PRODUCCION} as string,",
				"          {NOMBRE CIENTIFICO} as string,",
				"          {CICLO DE CULTIVO} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UbicacionFlow",
				"source(output(",
				"          f010_cod_municipio as integer,",
				"          f010_nombre_municipio as string,",
				"          f010_cod_dpto as integer,",
				"          f010_nombre_dpto as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> UbicacionDs",
				"UbicacionFlow aggregate(groupBy({COD.DEP.},",
				"          DEPARTAMENTO,",
				"          {C0D.MUN.},",
				"          MUNICIPIO),",
				"     ID = count({C0D.MUN.})) ~> RemoveDuplicatedRecords",
				"RemoveSemicolumnCharacter select(mapColumn(",
				"          f010_cod_dpto = {COD.DEP.},",
				"          f010_nombre_dpto = DEPARTAMENTO,",
				"          f010_cod_municipio = {C0D.MUN.},",
				"          f010_nombre_municipio = MUNICIPIO,",
				"          ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectUbicacionColums",
				"RemoveDuplicatedRecords derive({C0D.MUN.} = toInteger(replace({C0D.MUN.},';',''))) ~> RemoveSemicolumnCharacter",
				"SelectUbicacionColums, UbicacionDs exists(SelectUbicacionColums@f010_nombre_dpto == UbicacionDs@f010_nombre_dpto",
				"     && SelectUbicacionColums@f010_cod_municipio == UbicacionDs@f010_cod_municipio",
				"     && SelectUbicacionColums@f010_nombre_municipio == UbicacionDs@f010_nombre_municipio",
				"     && SelectUbicacionColums@f010_cod_dpto == UbicacionDs@f010_cod_dpto,",
				"     negate:true,",
				"     broadcast: 'auto')~> PreventDuplicateInserts",
				"PreventDuplicateInserts sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          f010_cod_municipio as integer,",
				"          f010_nombre_municipio as string,",
				"          f010_cod_dpto as integer,",
				"          f010_nombre_dpto as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SaveUbicacionRecords"
			]
		}
	}
}