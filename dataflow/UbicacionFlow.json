{
	"name": "UbicacionFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "evaluacionesagropecuariascsvds",
						"type": "DatasetReference"
					},
					"name": "UbicacionFlow"
				},
				{
					"dataset": {
						"referenceName": "ubicacionds",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "removeduplicatesmunanddpto"
				},
				{
					"name": "SelectUbicacionColums"
				},
				{
					"name": "RemoveSemicolumnCharacter"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {COD.DEP.} as integer,",
				"          DEPARTAMENTO as string,",
				"          {C0D.MUN.} as string,",
				"          MUNICIPIO as string,",
				"          {GRUPO DE CULTIVO} as string,",
				"          {SUBGRUPO DE CULTIVO} as string,",
				"          CULTIVO as string,",
				"          {DESAGREGACION REGIONAL Y/O SISTEMA PRODUCTIVO} as string,",
				"          ANO as integer,",
				"          PERIODO as string,",
				"          {Area Sembrada(ha)} as integer,",
				"          {Area Cosechada(ha)} as integer,",
				"          {Produccion(t)} as string,",
				"          {Rendimiento(t/ha)} as integer,",
				"          {ESTADO FISICO PRODUCCION} as string,",
				"          {NOMBRE CIENTIFICO} as string,",
				"          {CICLO DE CULTIVO} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UbicacionFlow",
				"source(output(",
				"          f010_cod_municipio as integer,",
				"          f010_nombre_municipio as string,",
				"          f010_cod_dpto as integer,",
				"          f010_nombre_dpto as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"UbicacionFlow aggregate(groupBy({COD.DEP.},",
				"          DEPARTAMENTO,",
				"          {C0D.MUN.},",
				"          MUNICIPIO),",
				"     ID = count({C0D.MUN.})) ~> removeduplicatesmunanddpto",
				"RemoveSemicolumnCharacter select(mapColumn(",
				"          f010_cod_dpto = {COD.DEP.},",
				"          f010_nombre_dpto = DEPARTAMENTO,",
				"          f010_cod_municipio = {C0D.MUN.},",
				"          f010_nombre_municipio = MUNICIPIO",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectUbicacionColums",
				"removeduplicatesmunanddpto derive({C0D.MUN.} = replace({C0D.MUN.},';','')) ~> RemoveSemicolumnCharacter",
				"source1 exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"SelectUbicacionColums sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}