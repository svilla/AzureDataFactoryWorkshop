{
	"name": "CultivoFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "evaluacionesagropecuariascsvds",
						"type": "DatasetReference"
					},
					"name": "EvaluacionesDS"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "ConcatenatedValues"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {COD.DEP.} as string,",
				"          DEPARTAMENTO as string,",
				"          {C0D.MUN.} as string,",
				"          MUNICIPIO as string,",
				"          {GRUPO DE CULTIVO} as string,",
				"          {SUBGRUPO DE CULTIVO} as string,",
				"          CULTIVO as string,",
				"          {DESAGREGACION REGIONAL Y/O SISTEMA PRODUCTIVO} as string,",
				"          ANO as string,",
				"          PERIODO as string,",
				"          {Area Sembrada(ha)} as string,",
				"          {Area Cosechada(ha)} as string,",
				"          {Produccion(t)} as string,",
				"          {Rendimiento(t/ha)} as string,",
				"          {ESTADO FISICO PRODUCCION} as string,",
				"          {NOMBRE CIENTIFICO} as string,",
				"          {CICLO DE CULTIVO} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EvaluacionesDS",
				"ConcatenatedValues aggregate(groupBy(computed_grouping = sha2(256, columns())),",
				"     each(match(true()))) ~> aggregate1",
				"EvaluacionesDS derive(concatenated_values = concat(\r",
				"    coalesce(normalize(toString({CULTIVO})), ''),\r",
				"    coalesce(normalize(toString({NOMBRE CIENTIFICO})), ''),\r",
				"    coalesce(normalize(toString({GRUPO DE CULTIVO})), ''),\r",
				"    coalesce(normalize(toString({SUBGRUPO DE CULTIVO})), ''),\r",
				"    toString(currentTimestamp())\r",
				")\r",
				") ~> ConcatenatedValues"
			]
		}
	}
}